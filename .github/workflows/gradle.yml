name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  checks: write
  security-events: write
  actions: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build
      run: ./gradlew bootJar
    - name: Run detekt
      run: ./gradlew detekt
    - name: Publish detekt summary
      run: cat build/reports/detekt/detekt.md >> $GITHUB_STEP_SUMMARY
    - name: Upload SARIF to GitHub using the upload-sarif action
      uses: github/codeql-action/upload-sarif@v2
      if: success() || failure()
      with:
        sarif_file: build/reports/detekt/detekt.sarif
    - name: Unit test
      run: ./gradlew test
    - name: Publish Test
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        check_name: Unit tests results
        files: |
          build/test-results/test/*.xml
    - name: Integration test
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/postgres
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: password
      run: ./gradlew testIntegration
    - name: Publish Integration test
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        check_name: Integration tests results
        files: |
          build/test-results/testIntegration/*.xml
    - name: Architecture test
      run: ./gradlew testArchitecture
    - name: Publish Architecture test
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        check_name: Architecture tests results
        files: |
          build/test-results/testArchitecture/*.xml
    - name: Component test
      run: ./gradlew testComponent
    - name: Publish Component test
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        check_name: Component tests results
        files: |
          build/test-results/testComponent/*.xml
    - name: Run Coverage
      run: ./gradlew jacocoFullReport
    - name: JaCoCo Code Coverage Report
      id: jacoco_reporter
      uses: PavanMudigonda/jacoco-reporter@v4.8
      with:
        coverage_results_path: build/reports/jacoco/jacocoFullReport/jacocoFullReport.xml
        coverage_report_name: Coverage
        coverage_report_title: JaCoCo
        github_token: ${{ secrets.GITHUB_TOKEN }}
        skip_check_run: false
        minimum_coverage: 80
        fail_below_threshold: false
        publish_only_summary: false
    - name: Publish Coverage Summary
      run: cat _TMP/coverage-results.md >> $GITHUB_STEP_SUMMARY
    - name: Run Mutation Tests
      run: ./gradlew pitest
